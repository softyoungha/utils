version: '3.7'

services:
  minio1:
    image: minio/minio:latest
    hostname: minio1
    volumes:
      - /data/minio/1-1:/data1
      - /data/minio/1-2:/data2
    ports:
      - "9001:9000"
    networks:
      - minio_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      placement:
        constraints:
          - node.labels.minio==true
          - node.labels.number==1
    command: server http://minio{1...4}/data{1...2}
    secrets:
      - access_key
      - secret_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:latest
    hostname: minio2
    volumes:
      - /data/minio/2-1:/data1
      - /data/minio/2-2:/data2
    ports:
      - "9002:9000"
    networks:
      - minio_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      placement:
        constraints:
          - node.labels.minio==true
          - node.labels.number==2
    command: server http://minio{1...4}/data{1...2}
    secrets:
      - access_key
      - secret_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:latest
    hostname: minio3
    volumes:
      - /data/minio/3-1:/data1
      - /data/minio/3-2:/data2
    ports:
      - "9003:9000"
    networks:
      - minio_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      placement:
        constraints:
          - node.labels.minio==true
          - node.labels.number==3
    command: server http://minio{1...4}/data{1...2}
    secrets:
      - access_key
      - secret_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:latest
    hostname: minio4
    volumes:
      - /data/minio/4-1:/data1
      - /data/minio/4-2:/data2
    ports:
      - "9004:9000"
    networks:
      - minio_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      placement:
        constraints:
          - node.labels.minio==true
          - node.labels.number==4
    command: server http://minio{1...4}/data{1...2}
    secrets:
      - access_key
      - secret_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mc:
    image: minio/mc:latest
    container_name: mc
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.minio==true
        preferences:
          - spread: "node.labels.number==1"
    entrypoint: |
      sh -c 'sh -s << EOF
      sleep 10
      mc config host add minio http://minio1:9000 youngha youngha
      mc mb minio/bucket
      sleep 10000000
      EOF'
    networks:
      - minio_net
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  nginx:
    image: nginx:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      placement:
        constraints:
          - node.labels.minio==true
    configs:
      - source: minio_nginx_conf
        target: /etc/nginx/nginx.conf
    ports:
      - "9005:80"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - minio_net

networks:
  minio_net:
    external: true

secrets:
  access_key:
    external: true
  secret_key:
    external: true

configs:
  minio_nginx_conf:
    external: true